pipeline {
    agent any

    environment {
        MVN_HOME = tool 'maven-3.5.2'
    }

    stages {
        stage('Build and Test') {
            steps {
                script {
                    sh "${MVN_HOME}/bin/mvn clean test"
                }
            }
        }

        stage('Modify and Fail Test') {
            steps {
                script {
                    // Modifier intentionnellement le test pour le faire échouer
                    sh "sed -i 's/assertEquals(3, Calculator.add(1, 2))/assertEquals(4, Calculator.add(1, 2))/' demo/src/test/java/com/example/demo/CalculatorTest.java"
                }
            }
        }

        stage('Verify Compilation and Failing Test') {
            steps {
                script {
                    // Vérifier que la compilation fonctionne et que le test échoue
                    sh "${MVN_HOME}/bin/mvn clean test"
                }
            }
        }

        stage('Ignore Test') {
            steps {
                script {
                    // Ignorer le test temporairement
                    sh "sed -i '/@Test/,/@Ignore/ s/^/\\/\\/ /' demo/src/test/java/com/example/demo/CalculatorTest.java"
                }
            }
        }

        stage('Verify Ignored Test') {
            steps {
                script {
                    // Vérifier que la compilation fonctionne avec le test ignoré
                    sh "${MVN_HOME}/bin/mvn clean test"
                }
            }
        }

        stage('Publish Test Reports') {
            steps {
                // Dépend du plugin utilisé pour la génération des rapports
                // Exemple avec le plugin JUnit
                junit 'demo/target/surefire-reports/*.xml'
            }
        }
    }
}
