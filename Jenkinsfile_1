pipeline {
    agent any

    environment {
        MVN_HOME = tool 'maven-3.5.2'
    }

    stages {
        stage('Print Maven Version') {
            steps {
                script {
                    bat "\"${MVN_HOME}\\bin\\mvn\" --version"
                }
            }
        }

        stage('Build and Test') {
            steps {
                script {
                    // Utilisez le chemin complet de l'exécutable Maven
                    bat "\"${MVN_HOME}\\bin\\mvn\" clean test"
                }
            }
        }

        stage('Modify and Fail Test') {
            steps {
                script {
                    // Modifier intentionnellement le test pour le faire échouer
                    bat "powershell -Command \"(Get-Content -Path .\\src\\test\\java\\com\\example\\demo\\DummyTest.java) -replace 'expectedValue', 'newValue' | Set-Content -Path .\\src\\test\\java\\com\\example\\demo\\DummyTest.java\""
                }
            }
        }

        stage('Verify Compilation and Failing Test') {
            steps {
                script {
                    // Vérifier que la compilation fonctionne et que le test échoue
                    bat "\"${MVN_HOME}\\bin\\mvn\" clean test"
                }
            }
        }

        // Ajoutez d'autres étapes selon votre besoin

        stage('Publish Test Reports') {
            steps {
                // Dépend du plugin utilisé pour la génération des rapports
                // Exemple avec le plugin JUnit
                junit '**/target/surefire-reports/*.xml'
            }
        }
    }
}
