pipeline {
    agent any

    environment {
        MVN_HOME = tool 'maven-3.5.2'
        PROJECT_PATH = "${WORKSPACE}/demo"
    }

    stages {
        stage('Build and Test') {
            steps {
                script {
                    sh "${MVN_HOME}/bin/mvn -f ${PROJECT_PATH}/pom.xml clean test"
                }
            }
        }

        stage('Modify and Fail Test') {
            steps {
                script {
                    // Modifier intentionnellement le test pour le faire échouer
                    sh "sed -i 's/assertEquals(4, add(2, 2))/assertEquals(5, add(2, 2))/' ${PROJECT_PATH}/src/test/java/com/example/demo/DummyTest.java"
                }
            }
        }

        stage('Verify Compilation and Failing Test') {
            steps {
                script {
                    // Vérifier que la compilation fonctionne et que le test échoue
                    sh "${MVN_HOME}/bin/mvn -f ${PROJECT_PATH}/pom.xml clean test"
                }
            }
        }

        stage('Ignore Test') {
            steps {
                script {
                    // Ignorer le test temporairement
                    sh "sed -i '/@Test/,/@Ignore/ s/^/\\/\\/ /' ${PROJECT_PATH}/src/test/java/com/example/demo/DummyTest.java"
                }
            }
        }

        stage('Verify Ignored Test') {
            steps {
                script {
                    // Vérifier que la compilation fonctionne avec le test ignoré
                    sh "${MVN_HOME}/bin/mvn -f ${PROJECT_PATH}/pom.xml clean test"
                }
            }
        }

        stage('Publish Test Reports') {
            steps {
                // Dépend du plugin utilisé pour la génération des rapports
                // Exemple avec le plugin JUnit
                junit "${PROJECT_PATH}/target/surefire-reports/*.xml"
            }
        }
    }
}
