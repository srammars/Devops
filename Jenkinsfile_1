pipeline {
    agent any
    
    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Build and Test') {
            steps {
                script {
                    // Configuration Maven
                    def mvnHome = tool 'Maven'
                    withEnv(["PATH+MAVEN=${mvnHome}/bin"]) {
                        // Compilation et tests Maven
                        sh "mvn clean test"
                    }
                }
            }
        }

        stage('Modify Test to Fail') {
            steps {
                script {
                    // Modifier un test pour le faire échouer (à des fins de démonstration)
                    sh "echo 'public void testFailure() { org.junit.Assert.fail(); }' >> src/test/java/VotreClasseDeTest.java"
                }
            }
        }

        stage('Build with Failing Test') {
            steps {
                script {
                    // Compilation avec le test modifié qui échoue
                    def mvnHome = tool 'Maven'
                    withEnv(["PATH+MAVEN=${mvnHome}/bin"]) {
                        sh "mvn clean test"
                    }
                }
            }
        }

        stage('Ignore Test') {
            steps {
                script {
                    // Ignorer le test via Maven
                    def mvnHome = tool 'Maven'
                    withEnv(["PATH+MAVEN=${mvnHome}/bin"]) {
                        sh "mvn clean test -Dtest=!CalculatorTest"
                    }
                }
            }
        }
    }

    post {
        always {
            // Étape pour publier les rapports de tests
            junit '**/target/surefire-reports/*.xml'
        }
    }
}
