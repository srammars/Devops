pipeline {
    agent any

    tools {
        maven 'maven-3.5.2'
    }

    stages {
        stage('Checkout SCM') {
            steps {
                checkout scm
            }
        }

        stage('Build and Test') {
            steps {
                script {
                    def mvnHome = tool 'maven-3.5.2'
                    withEnv(["PATH+MAVEN=${mvnHome}/bin"]) {
                        sh "mvn clean test"
                    }
                }
            }
        }

        stage('Modify Test to Fail') {
            steps {
                script {
                    def calculatorTestPath = "src/test/java/com/example/demo/CalculatorTest.java"

                    sh """
                        echo "import static org.junit.Assert.fail;\\n\\npublic class CalculatorTest {\\n\\n@Test\\npublic void testFailing() {\\n    fail(\\\"This test intentionally fails.\\\")\\n}\\n}" > ${calculatorTestPath}
                    """
                }
            }
        }

        stage('Build with Failing Test') {
            steps {
                script {
                    def mvnHome = tool 'maven-3.5.2'
                    withEnv(["PATH+MAVEN=${mvnHome}/bin"]) {
                        sh "mvn clean test -Dtest=!CalculatorTest"
                    }
                }
            }
        }

        stage('Ignore Test') {
            steps {
                script {
                    // Ignorez le test pour obtenir un build correct
                    def mvnHome = tool 'maven-3.5.2'
                    withEnv(["PATH+MAVEN=${mvnHome}/bin"]) {
                        sh "mvn clean test -Dtest=!CalculatorTest"
                    }
                }
            }
        }

    }

    post {
        always {
            junit '**/target/surefire-reports/*.xml'
        }
    }
}
