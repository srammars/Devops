pipeline {
    agent any

    environment {
        MVN_HOME = tool 'maven-3.5.2'
        SONARQUBE_HOME = tool 'sonarqube-3.2.0'
    }

    stages {
        stage('Clone repo') {
            steps {
                checkout scm
            }
        }

        stage('Build and Test') {
            steps {
                script {
                    sh "${MVN_HOME}/bin/mvn clean test"
                }
            }
        }

        stage('Modify Test to Fail') {
            steps {
                script {
                    // Modify your test to intentionally fail
                    // For example, update the expected result in one of your test methods
                }
            }
        }

        stage('Build with Failing Test') {
            steps {
                script {
                    // Ensure that the compilation still occurs even with a failing test
                    sh "${MVN_HOME}/bin/mvn clean test"
                }
            }
        }

        stage('Ignore Test') {
            steps {
                script {
                    // Ignore the failing test via Maven
                    sh "${MVN_HOME}/bin/mvn clean test -Dtest=!YourFailingTestClassName"
                }
            }
        }

        stage('Publish Test Report') {
            steps {
                script {
                    // Publish the test report
                    junit '**/target/surefire-reports/*.xml'
                }
            }
        }

        stage('Run SonarQube Analysis') {
            steps {
                script {
                    withSonarQubeEnv('SonarQube Server') {
                        sh "${MVN_HOME}/bin/mvn sonar:sonar"
                    }
                }
            }
        }
    }

    post {
        always {
            echo 'This will always run'
        }
        success {
            echo 'This will run only if the build is successful'
        }
        failure {
            echo 'This will run only if the build fails'
        }
    }
}
